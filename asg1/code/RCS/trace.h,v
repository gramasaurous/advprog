head	1.4;
access;
symbols;
locks;
comment	@ * @;


1.4
date	2014.03.27.00.34.27;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.03.27.00.10.32;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.06.19.00.50.59;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.06.19.00.32.08;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: trace.h,v 1.3 2014-03-26 17:10:32-07 - - $

#ifndef __TRACE_H__
#define __TRACE_H__

#include <string>
#include <vector>

using namespace std;

//
// traceflags -
//    static class for maintaining global trace flags, each indicated
//    by a single character.
// setflags -
//    Takes a string argument, and sets a flag for each char in the
//    string.  As a special case, '@@', sets all flags.
// getflag -
//    Used by the TRACE macro to check to see if a flag has been set.
//    Not to be called by user code.
//

class traceflags {
   private:
      static vector<bool> flags;
   public:
      static void setflags (const string& optflags);
      static bool getflag (char flag);
};

//
// TRACE -
//    Macro which expands into trace code.  First argument is a
//    trace flag char, second argument is output code that can
//    be sandwiched between <<.  Beware of operator precedence.
//    Example:
//       TRACE ('u', "foo = " << foo);
//    will print two words and a newline if flag 'u' is  on.
//    Traces are preceded by filename, line number, and function.
//

#define TRACE(FLAG,CODE) { \
           if (traceflags::getflag (FLAG)) { \
              cerr << execname() << ": TRACE(" << FLAG << ") " \
                   << __func__ << " (" << __FILE__ << ":" << __LINE__ \
                   << "):" << endl; \
              cerr << CODE << endl; \
           } \
        }

#endif

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: trace.h,v 1.2 2013-06-18 17:50:59-07 - - $
d25 1
a25 1
      static vector<char> flags;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: trace.h,v 1.1 2013-06-18 17:32:08-07 - - $
d27 1
a27 1
      static void setflags (const string &optflags);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: trace.h,v 1.1 2012-03-29 17:23:35-07 - - $
d44 3
a46 2
              cerr << __FILE__ << ":" << __LINE__ << ":" \
                   << __func__ << ":" << endl; \
@
