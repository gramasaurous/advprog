head	1.9;
access;
symbols;
locks;
comment	@// @;


1.9
date	2014.03.27.00.34.07;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.03.27.00.25.08;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.03.27.00.22.23;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.03.27.00.21.42;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.03.27.00.17.48;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.03.27.00.15.54;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.06.26.04.21.16;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.06.19.00.49.43;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.06.19.00.31.28;	author -;	state -;
branches;
next	;


desc
@@


1.9
log
@-
@
text
@// $Id: trace.cpp,v 1.5 2014-03-26 17:17:48-07 - - $

#include <climits>
#include <iostream>
#include <vector>

using namespace std;

#include "trace.h"
#include "util.h"

vector<bool> traceflags::flags (UCHAR_MAX + 1, false);

void traceflags::setflags (const string& initflags) {
   for (const char flag: initflags) {
      if (flag == '@@') flags.assign (flags.size(), true);
                  else flags[flag] = true;
   }
   // Note that TRACE can trace setflags.
   TRACE ('t', "flags = " << flags);
}

//
// getflag -
//    Check to see if a certain flag is on.
//

bool traceflags::getflag (char flag) {
   // WARNING: Don't TRACE this function or the stack will blow up.
   return flags[flag];
}

@


1.8
log
@-
@
text
@d12 1
a12 2
typedef vector<bool> boolvec;
boolvec traceflags::flags (UCHAR_MAX + 1, false);
d30 1
a30 2
   bool result = flags[flag];
   return result;
@


1.7
log
@-
@
text
@a13 1
const boolvec trueflags (UCHAR_MAX + 1, true);
d17 2
a18 5
      if (flag == '@@') {
         flags = trueflags;
      }else {
         flags[flag] = true;
      }
@


1.6
log
@-
@
text
@d16 2
a17 2
void traceflags::setflags (const string& flags) {
   for (const char flag: flags) {
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: trace.cpp,v 1.4 2014-03-26 17:15:54-07 - - $
d12 1
a12 1
typedef vector<char> boolvec;
d19 1
a19 1
         traceflags::flags = trueflags;
d21 1
a21 1
         traceflags::flags[flag] = true;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: trace.cpp,v 1.3 2013-06-25 21:21:16-07 - - $
d17 2
a18 3
   for (string::const_iterator itor = flags.begin();
        itor != flags.end(); ++itor) {
      if (*itor == '@@') {
d21 1
a21 1
         traceflags::flags[*itor] = true;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: trace.cpp,v 1.2 2013-06-18 17:49:43-07 - - $
d16 1
a16 1
void traceflags::setflags (const string &flags) {
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: trace.cpp,v 1.1 2013-06-18 17:31:28-07 - - $
d17 2
a18 1
   for (auto itor = flags.begin(); itor != flags.end(); ++itor) {
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: trace.cpp,v 1.9 2013-01-02 19:40:38-08 - - $
d10 1
@
