head	1.9;
access;
symbols;
locks;
comment	@ * @;


1.9
date	2014.06.12.23.44.08;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.06.11.20.34.25;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.05.30.02.09.13;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.03.27.02.55.18;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.03.27.01.39.40;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.03.27.00.34.27;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.03.27.00.10.32;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.06.24.19.38.03;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.06.19.00.32.08;	author -;	state -;
branches;
next	;


desc
@@


1.9
log
@-
@
text
@// $Id: util.h,v 1.8 2014-06-11 13:34:25-07 - - $

//
// util -
//    A utility class to provide various services not conveniently
//    included in other modules.
//

#ifndef __UTIL_H__
#define __UTIL_H__

#include <iostream>
#include <stdexcept>
#include <string>
#include <vector>
using namespace std;

//
// Convenient type using to allow brevity of code elsewhere.
//

using wordvec = vector<string>;

//
// yshell_exn -
//    Extend runtime_error for throwing exceptions related to this
//    program.
//

class yshell_exn: public runtime_error {
   public:
      explicit yshell_exn (const string& what);
};

//
// setexecname -
//    Sets the static string to be used as an execname.
// execname -
//    Returns the basename of the executable image, which is used in
//    printing error messags.
//

void execname (const string&);
string& execname();


//
// want_echo -
//    We want to echo all of cin to cout if either cin or cout
//    is not a tty.  This helps make batch processing easier by
//    making cout look like a terminal session trace.
//

bool want_echo();

//
// exit_status -
//    A static class for maintaining the exit status.  The default
//    status is EXIT_SUCCESS (0), but can be set to another value,
//    such as EXIT_FAILURE (1) to indicate that error messages have
//    been printed.
//

class exit_status {
   private:
      static int status;
   public:
      static void set (int);
      static int get();
};

//
// split -
//    Split a string into a wordvec (as defined above).  Any sequence
//    of chars in the delimiter string is used as a separator.  To
//    Split a pathname, use "/".  To split a shell command, use " ".
//

wordvec split (const string& line, const string& delimiter);

// complain -
//    Used for starting error messages.  Sets the exit status to
//    EXIT_FAILURE, writes the program name to cerr, and then
//    returns the cerr ostream.  Example:
//       complain() << filename << ": some problem" << endl;
//

ostream& complain();


//
// operator<< (vector) -
//    An overloaded template operator which allows vectors to be
//    printed out as a single operator, each element separated from
//    the next with spaces.  The item_t must have an output operator
//    defined for it.
//

template <typename item_t>
ostream& operator<< (ostream& out, const vector<item_t>& vec) {
   string space = "";
   for (const auto& item: vec) {
      out << space << item;
      space = " ";
   }
   return out;
}

#endif

@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.7 2014-05-29 19:09:13-07 - - $
d90 1
d100 8
a107 1
ostream& operator<< (ostream& out, const vector<item_t>& vec);
a108 1
#include "util.tcc"
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.6 2014-03-26 19:55:18-07 - - $
d13 1
a15 5

#ifdef __GNUC__
#include <stdexcept>
#endif

d43 1
a43 1
void setexecname (const string&);
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.5 2014-03-26 18:39:40-07 - - $
d23 1
a23 1
// Convenient typedef to allow brevity of code elsewhere.
d26 1
a26 1
typedef vector<string> wordvec;
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.4 2014-03-26 17:34:27-07 - - $
a105 1

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.3 2014-03-26 17:10:32-07 - - $
a21 2
#include "trace.h"

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.2 2013-06-24 12:38:03-07 - - $
d107 2
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.1 2013-06-18 17:32:08-07 - - $
d38 1
a38 1
      explicit yshell_exn (const string &what);
d49 2
a50 2
void setexecname (const string &);
string &execname();
d85 1
a85 1
wordvec split (const string &line, const string &delimiter);
d94 1
a94 1
ostream &complain();
d105 1
a105 1
ostream &operator<< (ostream &out, const vector<item_t> &vec);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: util.h,v 1.3 2013-01-02 19:29:51-08 - - $
d55 1
a55 1
//    We want to echo all of cin to cout if if either cin or cout
@
